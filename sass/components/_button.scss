.btn {
  &,
  &:link,
  &:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    /* transition has to be on initial state rather than hover etc */
    transition: all 0.2s;
    /* make it relative so we can have pseudobutton do absolute to it */
    position: relative;
    font-size: 1.6rem;

    // change for the real button element in the form
    border: none;
    cursor: pointer;
  }

  &:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba($color-black, 0.2);
    &::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0;
    }
  }

  &:active,
  &:focus {
    outline: none;
    /* translate refers to initial state, so from the -3 in hover it will actually go down to -1 rather than compound with the -3 to make -4 */
    transform: translateY(-1px);
    box-shadow: 0 0.5rem 1rem rgba($color-black, 0.2);
  }

  &--white {
    background-color: #fff;
    color: #777;
    &:after {
      background-color: white;
    }
  }

  &--grey {
    background-color: $color-grey-dark-4;
    color: $color-white;
  }

  /* this is a pseudoelement */
  &::after {
    content: "";
    display: inline-block;
    /*pseudoelements are treated as children of the element, so 100% makes it same size as normal button*/
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    /* this pseudoelement is the initial state for other psudoelement properties */
    transition: all 0.4s;
  }

  &--animated {
    animation: moveInBottom 0.5s ease-out 0.75s;
    /* The button currently is visible before the animation. To hide it from the start use: */
    animation-fill-mode: backwards;
  }

  &-blue {
    background-color: $color-primary;
    color: white;
  }
}

.btn-text {
  &:link,
  &:visited {
    color: $color-primary;
    display: inline-block;
    text-decoration: none;
    border-bottom: 1px solid $color-primary;
    padding: 3px;
    font-size: $default-font-size;
    transition: all 0.2s;
  }
  &:hover {
    background-color: $color-primary;
    color: $color-grey-light-1;
    box-shadow: 0 1rem 2rem rgba($color-black, 0.15);
    transform: translateY(-2px);
  }
  &:active {
    box-shadow: 0 0.5rem 1rem rgba($color-black, 0.15);
    transform: translateY(0);
  }
}
